from datetime import datetime

class FilterModule(object):
    def filters(self):
        """
        Custom Jinja2 filter to convert an array into a list of dictionaries
        with a formatted timestamp.
        """
        return {
            'ad_to_list_with_time': self.ad_to_list_with_time,
        }

    def ad_to_list_with_time(self, array, key_field, value_field):
        """
        Convert array output into a list of dictionaries with formatted time.
        array: List of dictionaries to convert.
        key_field: Field to use as the key for each dictionary's key.
        value_field: Field to use as the key for each dictionary's value.
        """
        formatted_list = []
        for item in array:
            # Assuming the value is in a format compatible with Python's datetime
            last_password_set = item[value_field]
            try:
                # Format time if it's valid
                formatted_time = datetime.strptime(last_password_set, "%Y-%m-%dT%H:%M:%SZ").strftime("%Y-%m-%dT%H:%M:%SZ")
            except ValueError:
                # If time is not valid, fallback to default value or leave as-is
                formatted_time = "0001-01-01T00:00:00Z"
            
            formatted_list.append({
                "deviceName": item[key_field],
                "lastPasswordSet": formatted_time
            })
        return formatted_list
