from datetime import datetime

class FilterModule(object):
    def filters(self):
        """
        Custom Jinja2 filter to convert an array into a dictionary
        with the device name as the key and formatted time as the value.
        """
        return {
            'ad_to_fact_dict': self.ad_to_fact_dict,
        }

    def ad_to_fact_dict(self, array, key_field, value_field):
        """
        Convert array output into a dictionary with formatted time.
        array: List of dictionaries to convert.
        key_field: Field to use as the key in the dictionary.
        value_field: Field to use as the value in the dictionary.
        """
        formatted_dict = {}
        for item in array:
            # Get the value for last password set
            last_password_set = item[value_field]
            try:
                # Format the time
                formatted_time = datetime.strptime(last_password_set, "%Y-%m-%dT%H:%M:%SZ").strftime("%Y-%m-%dT%H:%M:%SZ")
            except ValueError:
                # Default value for invalid date
                formatted_time = "0001-01-01T00:00:00Z"
            
            # Assign to the dictionary with device name as key
            formatted_dict[item[key_field]] = formatted_time
        
        return formatted_dict
